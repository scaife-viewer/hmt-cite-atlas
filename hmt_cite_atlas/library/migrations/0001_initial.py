# Generated by Django 2.2.6 on 2023-08-21 21:30

from django.db import migrations, models
import django.db.models.deletion
import django_jsonfield_backport.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
    ]

    operations = [
        migrations.CreateModel(
            name='CITECollection',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('urn', models.CharField(max_length=255, unique=True)),
                ('description', models.CharField(blank=True, max_length=255, null=True)),
                ('license', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'verbose_name': 'CITECollection',
                'verbose_name_plural': 'CITECollections',
                'ordering': ['urn'],
            },
        ),
        migrations.CreateModel(
            name='CITEDatum',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('urn', models.CharField(max_length=255, unique=True)),
                ('fields', django_jsonfield_backport.models.JSONField(blank=True, default=dict)),
                ('citecollection', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='citedata', to='library.CITECollection')),
            ],
            options={
                'verbose_name': 'CITEDatum',
                'verbose_name_plural': 'CITEData',
                'ordering': ['urn'],
            },
        ),
        migrations.CreateModel(
            name='CITELibrary',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('urn', models.CharField(max_length=255, unique=True)),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('metadata', django_jsonfield_backport.models.JSONField(blank=True, default=dict)),
            ],
            options={
                'verbose_name': 'CITELibrary',
                'verbose_name_plural': 'CITElibraries',
                'ordering': ['urn'],
            },
        ),
        migrations.CreateModel(
            name='CTSCatalog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('urn', models.CharField(max_length=255, unique=True)),
                ('citation_scheme', django_jsonfield_backport.models.JSONField(blank=True, default=list, null=True)),
                ('group_name', models.CharField(blank=True, max_length=255, null=True)),
                ('work_title', models.CharField(blank=True, max_length=255, null=True)),
                ('version_label', models.CharField(blank=True, max_length=255, null=True)),
                ('exemplar_label', models.CharField(blank=True, max_length=255, null=True)),
                ('online', models.BooleanField()),
                ('lang', models.CharField(blank=True, max_length=255, null=True)),
                ('citelibrary', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ctscatalogs', to='library.CITELibrary')),
            ],
            options={
                'verbose_name': 'CTSCatalog',
                'verbose_name_plural': 'CTSCatalogs',
                'ordering': ['urn'],
            },
        ),
        migrations.CreateModel(
            name='Relation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subject_id', models.PositiveIntegerField(blank=True, null=True)),
                ('object_id', models.PositiveIntegerField(blank=True, null=True)),
                ('object_at', models.CharField(blank=True, max_length=255, null=True)),
                ('citelibrary', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='relations', to='library.CITELibrary')),
                ('object_content_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='object_relations', to='contenttypes.ContentType')),
                ('subject_content_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='subject_relations', to='contenttypes.ContentType')),
                ('verb', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='relations', to='library.CITEDatum')),
            ],
        ),
        migrations.CreateModel(
            name='Datamodel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('urn', models.CharField(max_length=255, unique=True)),
                ('label', models.CharField(blank=True, max_length=255, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('citecollection', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='datamodels', to='library.CITECollection')),
                ('citelibrary', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='datamodels', to='library.CITELibrary')),
            ],
            options={
                'ordering': ['urn'],
            },
        ),
        migrations.CreateModel(
            name='CTSDatum',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('urn', models.CharField(max_length=255, unique=True)),
                ('text_content', models.TextField(blank=True, null=True)),
                ('position', models.IntegerField()),
                ('idx', models.IntegerField(help_text='0-based index')),
                ('citelibrary', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ctsdata', to='library.CITELibrary')),
                ('ctscatalog', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ctsdata', to='library.CTSCatalog')),
            ],
            options={
                'verbose_name': 'CTSDatum',
                'verbose_name_plural': 'CTSData',
                'ordering': ['idx'],
            },
        ),
        migrations.CreateModel(
            name='CITEProperty',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('urn', models.CharField(max_length=255, unique=True)),
                ('label', models.CharField(blank=True, max_length=255, null=True)),
                ('property_type', models.CharField(choices=[('String', 'string'), ('CtsUrn', 'ctsurn'), ('Cite2Urn', 'cite2urn'), ('Number', 'number'), ('Boolean', 'boolean')], max_length=8)),
                ('authority_list', django_jsonfield_backport.models.JSONField(blank=True, default=list, null=True)),
                ('labelling_property', models.BooleanField()),
                ('ordering_property', models.BooleanField()),
                ('citecollection', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='citeproperties', to='library.CITECollection')),
                ('citelibrary', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='citeproperties', to='library.CITELibrary')),
            ],
            options={
                'verbose_name': 'CITEProperty',
                'verbose_name_plural': 'CITEProperties',
                'ordering': ['urn'],
            },
        ),
        migrations.AddField(
            model_name='citedatum',
            name='citelibrary',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='citedata', to='library.CITELibrary'),
        ),
        migrations.AddField(
            model_name='citecollection',
            name='citelibrary',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='citecollections', to='library.CITELibrary'),
        ),
    ]
